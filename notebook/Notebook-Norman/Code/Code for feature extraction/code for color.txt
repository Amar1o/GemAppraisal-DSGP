import cv2
import numpy as np
import os
from sklearn.preprocessing import normalize
from PIL import Image
from rembg import remove
import pandas as pd

def extract_color_features(image_path):
    """
    Extract color features from the image using color histograms and average RGB values.
    """
    # Load the image
    image = cv2.imread(image_path)
    if image is None:
        print(f"Error loading image: {image_path}")
        return None

    # Step 1: Remove background
    pil_img = Image.fromarray(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    img_no_bg = remove(pil_img)
    img_no_bg = np.array(img_no_bg)

    # Step 2: Convert the image to RGB
    rgb_image = cv2.cvtColor(img_no_bg, cv2.COLOR_RGBA2RGB)

    # Step 3: Calculate color histograms for each channel (Red, Green, Blue)
    hist_r = cv2.calcHist([rgb_image], [0], None, [256], [0, 256])
    hist_g = cv2.calcHist([rgb_image], [1], None, [256], [0, 256])
    hist_b = cv2.calcHist([rgb_image], [2], None, [256], [0, 256])

    # Step 4: Normalize histograms
    hist_r = normalize(hist_r, axis=0, norm='l1').flatten()
    hist_g = normalize(hist_g, axis=0, norm='l1').flatten()
    hist_b = normalize(hist_b, axis=0, norm='l1').flatten()

    # Step 5: Calculate average color values (mean of RGB channels)
    avg_r = np.mean(rgb_image[:, :, 0])
    avg_g = np.mean(rgb_image[:, :, 1])
    avg_b = np.mean(rgb_image[:, :, 2])

    # Step 6: Combine the color histograms and average values
    color_features = np.hstack([hist_r, hist_g, hist_b])

    # Return the features relevant to color
    return {
        "Image": os.path.basename(image_path),
        "Avg Red": avg_r,
        "Avg Green": avg_g,
        "Avg Blue": avg_b,
        **{f'R Hist Bin {i}': hist_r[i] for i in range(len(hist_r))},
        **{f'G Hist Bin {i}': hist_g[i] for i in range(len(hist_g))},
        **{f'B Hist Bin {i}': hist_b[i] for i in range(len(hist_b))}
    }

def process_images(input_folder, output_folder):
    """
    Process all images in the specified folder and extract color features.
    """
    features_list = []

    for filename in os.listdir(input_folder):
        if filename.endswith(('.png', '.jpg', '.jpeg')):
            image_path = os.path.join(input_folder, filename)
            
            # Extract color features
            color_features = extract_color_features(image_path)
            if color_features:
                features_list.append(color_features)

    # Convert to DataFrame
    df = pd.DataFrame(features_list)

    # Save DataFrame to CSV
    output_csv = os.path.join(output_folder, 'color_extracted_features_with_avg.csv')
    df.to_csv(output_csv, index=False)
    print(f"CSV with extracted color features (including avg RGB) saved at: {output_csv}")

    return df


# Define input and output directories
input_folder = r"C:\Users\Muralish\Desktop\Blue Sapphires\page1\B9543\B9543_video2\transparency"
output_folder = r"C:\Users\Muralish\Desktop\Blue Sapphires\page1\B9543\B9543_video2\transparency\updated"
os.makedirs(output_folder, exist_ok=True)

# Process images and save features
color_features_df = process_images(input_folder, output_folder)
