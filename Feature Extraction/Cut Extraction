 import pandas as pd
from sklearn.preprocessing import OneHotEncoder

# Load your dataset
df = pd.read_csv('/content/AllDataset_FeatureExtraction_Color_Clarity.csv')  # Replace with your actual dataset path

# Normalize column names to avoid case sensitivity
df.columns = df.columns.str.lower()

# Validate if 'cut' exists in the dataset
if 'cut' not in df.columns:
    raise KeyError("'cut' column not found. Available columns are:", df.columns)

### 1. Filter Specific Cut Types ###
# List the valid cut types to include
valid_cut_types = [
    'Mixed Brilliant', 'Asscher', 'Step Cut', 'Radiant Cut', 'Princess Cut',
    'Emerald Cut', 'Trillion Cut', 'French Cut', 'Fancy Cut',
    'Fancy Brilliant', 'Modified Brilliant', 'Brilliant', 'Carving', 'Scissor Cut'
]

# Filter rows with valid cut types
df = df[df['cut'].isin(valid_cut_types)]

### 2. One-Hot Encoding ###
# Use One-Hot Encoding for the Cut column
onehot_encoder = OneHotEncoder(sparse_output=False, handle_unknown='ignore')
cut_onehot_encoded = onehot_encoder.fit_transform(df[['cut']])

# Add the one-hot encoded columns to the dataframe
cut_onehot_columns = onehot_encoder.get_feature_names_out(['cut'])
cut_onehot_df = pd.DataFrame(cut_onehot_encoded, columns=cut_onehot_columns)
df = pd.concat([df, cut_onehot_df], axis=1)

### 3. Custom Grouping ###
# Group cuts into broader categories for simpler analysis
def group_cut(cut):
    if cut in ['Mixed Brilliant', 'Radiant Cut', 'Trillion Cut', 'Fancy Brilliant', 'Modified Brilliant', 'Brilliant']:
        return 'Brilliant Style'
    elif cut in ['Emerald Cut', 'Step Cut', 'Asscher']:
        return 'Step Style'
    elif cut in ['French Cut', 'Princess Cut', 'Scissor Cut']:
        return 'Geometric Style'
    elif cut == 'Carving':
        return 'Artistic Style'
    else:
        return 'Other'

# Apply the grouping function
df['cut_group'] = df['cut'].apply(group_cut)

### Save the Processed Dataset ###
output_file_path = 'processed_dataset_with_cut_features.csv'
df.to_csv(output_file_path, index=False)
print(f"Feature engineering for 'cut' completed and saved to {output_file_path}.")





